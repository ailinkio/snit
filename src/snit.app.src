{application, snit,
 [{description, "A SNI terminator library"},
  {vsn, "0.1.0"},
  {registered, []},
  {mod, {snit_app, []}},
  {applications,
   [kernel,
    stdlib,
    ssl,
    ranch
   ]},
  {env,[
    %% To compare cipher suites and make sure the OpenSSL name properly matches
    %% the internal Erlang name, run the following to generate a translation
    %% table:
    %%
    %%   Table = lists:sort([{OpenSSL, Erl}
    %%                       || Erl <- ssl:cipher_suites(),
    %%                          Raw <- [ssl_cipher:suite(Erl)],
    %%                          OpenSSL <- [ssl_cipher:openssl_suite_name(Raw)]]).
    %%
    %% Given a list of OpenSSL cipher suites, the configuration below can be
    %% generated by calling:
    %%
    %% [lists:keyfind(Suite, 1, Table) || Suite <- OpenSSLSuites].
    %%
    %% If any value is `false', the generation failed.
    %%
    %% Note that the OpenSSL translation layer is seen as there for backwards-
    %% compatibility reasons by the OTP team and may eventually be deprecated.
    {cipher_suites,
     [
      {rsa,aes_128_gcm,null},
      {rsa,aes_128_cbc,sha},
      {rsa,aes_128_cbc,sha256},
      {rsa,aes_256_gcm,null},
      {rsa,aes_256_cbc,sha},
      {rsa,aes_256_cbc,sha256},
      {dhe_dss,aes_128_cbc,sha},
      {dhe_rsa,aes_128_cbc,sha},
      {ecdhe_ecdsa,aes_128_gcm,null},
      {ecdhe_ecdsa,aes_128_cbc,sha},
      {ecdhe_ecdsa,aes_128_cbc,sha256},
      {ecdhe_ecdsa,aes_256_gcm,null},
      {ecdhe_ecdsa,aes_256_cbc,sha},
      {ecdhe_ecdsa,aes_256_cbc,sha384},
      {ecdhe_rsa,aes_128_gcm,null},
      {ecdhe_rsa,aes_128_cbc,sha},
      {ecdhe_rsa,aes_128_cbc,sha256},
      {ecdhe_rsa,aes_256_gcm,null},
      {ecdhe_rsa,aes_256_cbc,sha},
      {ecdhe_rsa,aes_256_cbc,sha384}
    ]}
  ]},
  {modules, []}
 ]}.
